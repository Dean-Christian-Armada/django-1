version: 2
jobs:
  login_test:
    # parallelism: 4
    docker:
      - image: infrastructureplayground/django:latest
        name: django
        environment:
          POSTGRES_USER: playground
          POSTGRES_PASSWORD: playground
          POSTGRES_DB: playground
          POSTGRES_PORT: 5432
          POSTGRES_SERVICE: postgres
          DOCKERIZED: true
          TZ: Asia/Singapore
      - image: unnotech/postgres-replication:10.4
        name: postgres
        environment:
          POSTGRES_USER: playground
          POSTGRES_PASSWORD: playground
          POSTGRES_DB: playground
          POSTGRES_PORT: 5432
          POSTGRES_SERVICE: postgres
          TZ: Asia/Singapore
    steps:
      - checkout
      - setup_remote_docker:  # needed to connect container ports
          docker_layer_caching: true
      - run: python manage.py makemigrations
      - run: python manage.py migrate
      - run: python manage.py test authentication.tests.RegistrationTest
      - run: python manage.py test authentication.tests.LoginTest
  inventory_test:
    # parallelism: 4
    docker:
      - image: infrastructureplayground/django:latest
        name: django
        environment:
          POSTGRES_USER: playground
          POSTGRES_PASSWORD: playground
          POSTGRES_DB: playground
          POSTGRES_PORT: 5432
          POSTGRES_SERVICE: postgres
          DOCKERIZED: true
          TZ: Asia/Singapore
      - image: unnotech/postgres-replication:10.4
        name: postgres
        environment:
          POSTGRES_USER: playground
          POSTGRES_PASSWORD: playground
          POSTGRES_DB: playground
          POSTGRES_PORT: 5432
          POSTGRES_SERVICE: postgres
          TZ: Asia/Singapore
    steps:
      - checkout
      - setup_remote_docker:  # needed to connect container ports
          docker_layer_caching: true
      - run: python manage.py makemigrations
      - run: python manage.py migrate
      - run: python manage.py test inventory.tests.BooksTest
  deploy_to_staging:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t infrastructureplayground/django:latest
      - run: docker push infrastructureplayground/django:latest
  deploy_to_production:
    machine: true
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t infrastructureplayground/django:production
      - run: docker push infrastructureplayground/django:production


workflows:
  version: 2
  pipeline:
    jobs:
      - login_test
      - inventory_test
      - deploy_to_staging:
          filters:
            branches:
              only:
                - master
      - production_hold:
          type: approval
          filters:
            branches:
              only:
                - production
      - deploy_to_production:
          requires:
            - production_hold